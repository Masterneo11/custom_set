

class CustomSet():


    def __init__(self,alist):
        self.alist = []
        

  
    def add(self,item : str ):
        alist.append(item)    
    print(alist)


   

    def remove(self, item : str ): 
        print(alist)
    try:
        alist.remove(item)
    except raise KeyError:
    print("Item not removed, try again")


   

     def as_list(self) -> list:
        print(alist)
    pass


    def clear(self):
    pass



def main():
    my_set = CustomSet()
    my_set.add("item 1")
    my_set.add("item 2")
    my_set.add("item 1")

    print(my_set.as_list()) # ["item 1", "item 2"]

    my_set.remove("item 2")
    print(my_set.as_list()) # ["item 1"]

    try:
        my_set.remove("item 3")
    except KeyError:
        print("Item not removed, moving forward")

    my_set.clear()
    print(my_set.as_list()) # []


if __name__ == "__main__":
    main()

